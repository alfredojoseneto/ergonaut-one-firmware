#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NUM 1
#define SYM 2
#define FUN 3

&lt { quick-tap-ms = <175>; };

&mt { quick-tap-ms = <175>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <SYM SYM>;
            then-layer = <FUN>;
        };
    };

    macros {
        VIM_SEL: VIM_SEL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp ESC &kp V &kp A &kp P>
                ;
        };

        SFT_ENT: SFT_ENT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp RET>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp ESC>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "MAIN";
            bindings = <
&kp TAB     &kp Q           &kp W               &kp E           &kp R               &kp T               &kp Y           &kp U           &kp I           &kp O       &kp P           &kp BSPC
&kp ESC     &mt LGUI A      &mt LALT S          &mt LCTRL D     &mt LSHFT F         &kp G               &kp H           &mt LSHFT J     &mt LCTRL K     &mt LALT L  &mt LGUI SEMI   &kp ESC
&kp DEL     &kp Z           &kp X               &kp C           &kp V               &kp B               &kp N           &kp M           &kp COMMA       &kp DOT     &kp FSLH        &kp DEL
                                                &kp CAPS        &mo 1               &kp RET             &kp SPACE       &mo 2           &mo 3
            >;
        };

        num_layer {
            display-name = "NUM";
            bindings = <
&trans      &kp KP_N1       &kp KP_N2           &kp KP_N3       &kp KP_N4           &kp KP_N5           &kp KP_N6       &kp KP_N7       &kp KP_N8       &kp KP_N9   &kp KP_N0       &trans
&trans      &kp LG(TAB)     &kp LG(LC(LEFT))    &kp LA(TAB)     &kp LG(LC(RIGHT))   &VIM_SEL            &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT   &kp INS         &trans
&trans      &none           &none               &none           &none               &SFT_ENT            &kp HOME        &kp PG_DN       &kp PG_UP       &kp END     &kp PSCRN       &trans
                                                &trans          &trans              &trans              &trans          &trans          &trans
            >;
        };

        sym_layer {
            display-name = "SYM";
            bindings = <
&kp F1      &kp F2          &kp F3              &kp F4          &kp F5              &kp F6              &kp F7          &kp F8          &kp F9          &kp F10     &kp F11         &kp F12
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5     &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp RALT
                                  &trans    &trans    &trans     &trans     &trans    &trans
            >;
        };

        fun_layer {
            display-name = "FUN";
            bindings = <
&kp F1      &kp F2          &kp F3              &kp F4          &kp F5              &kp F6              &kp F7          &kp F8          &kp F9          &kp F10     &kp F11         &kp F12
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1        &bt BT_SEL 2    &bt BT_SEL 3        &none               &none           &kp C_VOL_UP    &kp C_BRI_UP    &none       &none           &none
&bootloader &none           &none               &none           &none               &none               &kp C_MUTE      &kp C_VOL_DN    &kp C_BRI_DN   &none       &none           &bootloader
                                                &trans          &trans              &trans              &trans          &trans          &trans
            >;
        };
    };
};
